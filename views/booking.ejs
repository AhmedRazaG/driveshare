const express = require('express');
const router = express.Router();
const db = require('../db/database');
const ensureLoggedIn = (req, res, next) => {
  if (!req.session.user) return res.redirect('/auth/login');
  next();
};

router.get('/book', ensureLoggedIn, (req, res) => {
  // Expect listingId and date in query parameters.
  const { listingId, date } = req.query;
  if (!listingId || !date) {
    return res.send("Listing and date must be specified.");
  }
  // Retrieve the listing.
  const sql = "SELECT * FROM car_listings WHERE id = ?";
  db.get(sql, [listingId], (err, listing) => {
    if (err || !listing) {
      return res.send("Listing not found.");
    }
    // Parse availability.
    let availableDates = [];
    try { availableDates = JSON.parse(listing.availability); } catch(e) { }
    // Check if the selected date is available.
    if (!availableDates.includes(date)) {
      return res.send("Selected date is not available.");
    }
    // Proceed to create booking.
    const renterId = req.session.user.id;
    const insertSql = `INSERT INTO bookings (listingId, renterId, bookingDate) VALUES (?, ?, ?)`;
    db.run(insertSql, [listingId, renterId, date], function(err) {
      if (err) {
        console.error(err.message);
        return res.send("Error processing booking.");
      }
      // Remove the booked date from the availability array.
      availableDates = availableDates.filter(d => d !== date);
      const updateSql = "UPDATE car_listings SET availability = ? WHERE id = ?";
      db.run(updateSql, [JSON.stringify(availableDates), listingId], function(err) {
        if (err) {
          console.error(err.message);
          return res.send("Error updating availability.");
        }
        res.send(`Booking confirmed for ${date}.`);
      });
    });
  });
});

module.exports = router;
